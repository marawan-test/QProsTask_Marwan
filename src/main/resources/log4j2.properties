status = error
name=PropertiesConfig
#the folder name where the log file will be saved
property.filename = logs
appenders = console, file
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-20d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%tn] [%logger{1}:%method:%L] - %msg  %throwable{short.message}%n
appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName = logs.log
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = [%-20d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%tn] [%logger{1}:%method:%L] - %msg %throwable{short.message}%n
# if there is rewriting on the result
appender.file.append = false
loggers = file
# the name of the package that will take logs from
logger.file.name = src
# the level of logging [debug (it will show all other messages), error(it shows error and fatal message),
# warn(it shows error and fatal message), info(shows error, fatal and warn) and fetal(only the fetal message) ]
rootLogger.level = info
# change between file and console in order to print out logs either in console or file.
rootLogger.appenderRefs = file
rootLogger.appenderRef.stdout.ref = LOGFILE